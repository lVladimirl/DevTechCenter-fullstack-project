{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usu\\xE1rio\\\\Documents\\\\coding\\\\DevTechCenter-fullstack-project\\\\front\\\\src\\\\components\\\\navBar\\\\navBar.tsx\",\n  _s = $RefreshSig$();\nimport { useMediaQuery } from \"@mui/material\";\nimport { useState } from \"react\";\n//   import MenuIcon from \"@mui/icons-material/Menu\";\n//   import { BoxNav } from \"../Header/style\";\n\n//   import CloseIcon from \"@mui/icons-material/Close\";\nimport { useNavigate } from \"react-router-dom\";\nimport { BoxNav } from \"../header/style\";\nimport { Button } from \"../button/button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [\"Carros\", \"Motos\", \"Leilão\", \"Fazer Login\", \"Cadastrar\"];\nexport const NavBar = _ref => {\n  _s();\n  let {\n    setIsOpen\n  } = _ref;\n  const navigate = useNavigate();\n  const [isLogged, setIsLogged] = useState(false);\n  const matches = useMediaQuery(\"(min-width:700px)\");\n  //   const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\n  //   const open = Boolean(anchorEl);\n  //   const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n  //     setAnchorEl(event.currentTarget);\n  //     setIsOpen(true);\n  //   };\n  //   const handleClose = () => {\n  //     setAnchorEl(null);\n  //     setIsOpen(false);\n  //   };\n\n  //   const ITEM_HEIGHT = 200;\n  return /*#__PURE__*/_jsxDEV(BoxNav, {\n    children: /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n  //   (\n  //     <>\n  //       {matches ? (\n  //         <BoxNav>\n  //           <ButtonNav>Carros</ButtonNav>\n  //           <ButtonNav>Motos</ButtonNav>\n  //           <ButtonNav>Leilão</ButtonNav>\n  //           <SideBar />\n  //         </BoxNav>\n\n  //           {isLogged ? (\n  //             <>\n  //               <ButtonNav onClick={() => navigate(\"/login\")}>\n  //                 Fazer Login\n  //               </ButtonNav>\n  //               <ButtonRegisterNav onClick={() => navigate(\"/cadastro\")}>\n  //                 Cadastrar\n  //               </ButtonRegisterNav>\n  //             </>\n  //           ) : (\n  //             <>\n  //               <Avatar\n  //                 sx={{ bgcolor: deepPurple[500], width: \"36px\", height: \"36px\" }}\n  //                 sizes={\"400px\"}\n  //                 onClick={handleClick}\n  //               >\n  //                 {\"S\"}\n  //               </Avatar>\n  //               <p> Samuel Leão </p>\n  //               <Menu\n  //                 id=\"demo-positioned-menu\"\n  //                 aria-labelledby=\"demo-positioned-button\"\n  //                 anchorEl={anchorEl}\n  //                 open={open}\n  //                 onClose={handleClose}\n  //                 anchorOrigin={{\n  //                   vertical: \"top\",\n  //                   horizontal: \"left\",\n  //                 }}\n  //                 transformOrigin={{\n  //                   vertical: \"top\",\n  //                   horizontal: \"left\",\n  //                 }}\n  //               >\n  //                 <MenuItem> Editar Perfil</MenuItem>\n  //                 <MenuItem> Editar endereço</MenuItem>\n  //                 <MenuItem> Minhas Compras</MenuItem>\n  //                 <MenuItem> Sair</MenuItem>\n  //               </Menu>\n  //             </>\n  //           )}\n  //         </BoxNav>\n  //       ) : (\n  //         <div>\n  //           <IconButton\n  //             aria-label=\"more\"\n  //             id=\"long-button\"\n  //             aria-controls={open ? \"long-menu\" : undefined}\n  //             aria-expanded={open ? \"true\" : undefined}\n  //             aria-haspopup=\"true\"\n  //             onClick={handleClick}\n  //           >\n  //             {anchorEl === null ? <MenuIcon /> : <CloseIcon />}\n  //           </IconButton>\n  //           <Menu\n  //             id=\"long-menu\"\n  //             MenuListProps={{\n  //               \"aria-labelledby\": \"long-button\",\n  //             }}\n  //             anchorEl={anchorEl}\n  //             open={open}\n  //             onClose={handleClose}\n  //             PaperProps={{\n  //               style: {\n  //                 maxHeight: ITEM_HEIGHT * 4.5,\n  //                 width: \"100%\",\n  //               },\n  //             }}\n  //           >\n  //             {options.map((option) => (\n  //               <MenuItem key={option} onClick={handleClose}>\n  //                 {option}\n  //               </MenuItem>\n  //             ))}\n  //           </Menu>\n  //         </div>\n  //       )}\n  //     </>\n  //   );\n};\n_s(NavBar, \"lsDzmaXVEcJE46o/TDe065qDnWM=\", false, function () {\n  return [useNavigate, useMediaQuery];\n});\n_c = NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["useMediaQuery","useState","useNavigate","BoxNav","Button","options","NavBar","setIsOpen","navigate","isLogged","setIsLogged","matches"],"sources":["C:/Users/Usuário/Documents/coding/DevTechCenter-fullstack-project/front/src/components/navBar/navBar.tsx"],"sourcesContent":["import {\r\n  Avatar,\r\n  Menu,\r\n  MenuItem,\r\n  IconButton,\r\n  useMediaQuery,\r\n} from \"@mui/material\";\r\nimport { deepPurple } from \"@mui/material/colors\";\r\nimport { ReactElement, useState } from \"react\";\r\n//   import MenuIcon from \"@mui/icons-material/Menu\";\r\n//   import { BoxNav } from \"../Header/style\";\r\nimport { ButtonNav, SideBar, ButtonRegisterNav } from \"./style\";\r\n//   import CloseIcon from \"@mui/icons-material/Close\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { NavBarProps } from \"../../interface\";\r\nimport { BoxNav } from \"../header/style\";\r\nimport { Button } from \"../button/button\";\r\nconst options = [\"Carros\", \"Motos\", \"Leilão\", \"Fazer Login\", \"Cadastrar\"];\r\n\r\nexport const NavBar = ({ setIsOpen }: NavBarProps): ReactElement => {\r\n  const navigate = useNavigate();\r\n  const [isLogged, setIsLogged] = useState<boolean>(false);\r\n  const matches = useMediaQuery<boolean>(\"(min-width:700px)\");\r\n  //   const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  //   const open = Boolean(anchorEl);\r\n  //   const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n  //     setAnchorEl(event.currentTarget);\r\n  //     setIsOpen(true);\r\n  //   };\r\n  //   const handleClose = () => {\r\n  //     setAnchorEl(null);\r\n  //     setIsOpen(false);\r\n  //   };\r\n\r\n  //   const ITEM_HEIGHT = 200;\r\n  return (\r\n    <BoxNav>\r\n      <Button></Button>\r\n    </BoxNav>\r\n  );\r\n  //   (\r\n  //     <>\r\n  //       {matches ? (\r\n  //         <BoxNav>\r\n  //           <ButtonNav>Carros</ButtonNav>\r\n  //           <ButtonNav>Motos</ButtonNav>\r\n  //           <ButtonNav>Leilão</ButtonNav>\r\n  //           <SideBar />\r\n  //         </BoxNav>\r\n\r\n  //           {isLogged ? (\r\n  //             <>\r\n  //               <ButtonNav onClick={() => navigate(\"/login\")}>\r\n  //                 Fazer Login\r\n  //               </ButtonNav>\r\n  //               <ButtonRegisterNav onClick={() => navigate(\"/cadastro\")}>\r\n  //                 Cadastrar\r\n  //               </ButtonRegisterNav>\r\n  //             </>\r\n  //           ) : (\r\n  //             <>\r\n  //               <Avatar\r\n  //                 sx={{ bgcolor: deepPurple[500], width: \"36px\", height: \"36px\" }}\r\n  //                 sizes={\"400px\"}\r\n  //                 onClick={handleClick}\r\n  //               >\r\n  //                 {\"S\"}\r\n  //               </Avatar>\r\n  //               <p> Samuel Leão </p>\r\n  //               <Menu\r\n  //                 id=\"demo-positioned-menu\"\r\n  //                 aria-labelledby=\"demo-positioned-button\"\r\n  //                 anchorEl={anchorEl}\r\n  //                 open={open}\r\n  //                 onClose={handleClose}\r\n  //                 anchorOrigin={{\r\n  //                   vertical: \"top\",\r\n  //                   horizontal: \"left\",\r\n  //                 }}\r\n  //                 transformOrigin={{\r\n  //                   vertical: \"top\",\r\n  //                   horizontal: \"left\",\r\n  //                 }}\r\n  //               >\r\n  //                 <MenuItem> Editar Perfil</MenuItem>\r\n  //                 <MenuItem> Editar endereço</MenuItem>\r\n  //                 <MenuItem> Minhas Compras</MenuItem>\r\n  //                 <MenuItem> Sair</MenuItem>\r\n  //               </Menu>\r\n  //             </>\r\n  //           )}\r\n  //         </BoxNav>\r\n  //       ) : (\r\n  //         <div>\r\n  //           <IconButton\r\n  //             aria-label=\"more\"\r\n  //             id=\"long-button\"\r\n  //             aria-controls={open ? \"long-menu\" : undefined}\r\n  //             aria-expanded={open ? \"true\" : undefined}\r\n  //             aria-haspopup=\"true\"\r\n  //             onClick={handleClick}\r\n  //           >\r\n  //             {anchorEl === null ? <MenuIcon /> : <CloseIcon />}\r\n  //           </IconButton>\r\n  //           <Menu\r\n  //             id=\"long-menu\"\r\n  //             MenuListProps={{\r\n  //               \"aria-labelledby\": \"long-button\",\r\n  //             }}\r\n  //             anchorEl={anchorEl}\r\n  //             open={open}\r\n  //             onClose={handleClose}\r\n  //             PaperProps={{\r\n  //               style: {\r\n  //                 maxHeight: ITEM_HEIGHT * 4.5,\r\n  //                 width: \"100%\",\r\n  //               },\r\n  //             }}\r\n  //           >\r\n  //             {options.map((option) => (\r\n  //               <MenuItem key={option} onClick={handleClose}>\r\n  //                 {option}\r\n  //               </MenuItem>\r\n  //             ))}\r\n  //           </Menu>\r\n  //         </div>\r\n  //       )}\r\n  //     </>\r\n  //   );\r\n};\r\n"],"mappings":";;AAAA,SAKEA,aAAa,QACR,eAAe;AAEtB,SAAuBC,QAAQ,QAAQ,OAAO;AAC9C;AACA;;AAEA;AACA,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,MAAM,QAAQ,kBAAkB;AAAC;AAC1C,MAAMC,OAAO,GAAG,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,WAAW,CAAC;AAEzE,OAAO,MAAMC,MAAM,GAAG,QAA8C;EAAA;EAAA,IAA7C;IAAEC;EAAuB,CAAC;EAC/C,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAU,KAAK,CAAC;EACxD,MAAMU,OAAO,GAAGX,aAAa,CAAU,mBAAmB,CAAC;EAC3D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,oBACE,QAAC,MAAM;IAAA,uBACL,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA;EAAU;IAAA;IAAA;IAAA;EAAA,QACV;EAEX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;AAAC,GA9GWM,MAAM;EAAA,QACAJ,WAAW,EAEZF,aAAa;AAAA;AAAA,KAHlBM,MAAM;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}