{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usu\\xE1rio\\\\Documents\\\\coding\\\\DevTechCenter-fullstack-project\\\\front\\\\src\\\\pages\\\\home\\\\home.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Header } from \"../../components/header/header\";\nimport { NavBar } from \"../../components/navBar/navBar\";\nimport { TechModal } from \"../../components/techModal/techModal\";\nimport { Tech } from \"../../components/techs/techs\";\nimport { SnackBarAlert } from \"../../components/snackBarAlert/snackBarAlert\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [formType, setFormType] = useState(\"\");\n  const [techData, setTechData] = useState();\n  const userRedux = useSelector(state => state);\n  const navigate = useNavigate();\n  const [state, setState] = React.useState({\n    isOpenAlert: false,\n    vertical: \"top\",\n    horizontal: \"right\",\n    ResponseType: \"error\",\n    error: {\n      status: 0,\n      message: \"error message\"\n    }\n  });\n  const {\n    vertical,\n    horizontal,\n    isOpenAlert,\n    ResponseType,\n    error\n  } = state;\n  const handleModal = _ref => {\n    let {\n      typeOfForm,\n      techData\n    } = _ref;\n    if (typeOfForm) {\n      setFormType(typeOfForm);\n    }\n    setIsOpen(!isOpen);\n    setTechData(techData);\n  };\n  const handleClose = () => {\n    setState({\n      ...state,\n      isOpenAlert: false\n    });\n  };\n  useEffect(() => {\n    if (userRedux.user.userName === \"\") {\n      navigate(\"/login\");\n    }\n  });\n  console.log(userRedux);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SnackBarAlert, {\n      ResponseType: ResponseType,\n      isOpenAlert: isOpenAlert,\n      vertical: vertical,\n      horizontal: horizontal,\n      handleClose: handleClose,\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TechModal, {\n      setState: setState,\n      open: isOpen,\n      handleModal: handleModal,\n      type: formType,\n      techData: techData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tech, {\n      handleModal: handleModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Home, \"ylH/fYRoi4bCoJgsLZYc01OygMw=\", false, function () {\n  return [useSelector, useNavigate];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useNavigate","Header","NavBar","TechModal","Tech","SnackBarAlert","Home","isOpen","setIsOpen","formType","setFormType","techData","setTechData","userRedux","state","navigate","setState","isOpenAlert","vertical","horizontal","ResponseType","error","status","message","handleModal","typeOfForm","handleClose","user","userName","console","log"],"sources":["C:/Users/UsuÃ¡rio/Documents/coding/DevTechCenter-fullstack-project/front/src/pages/home/home.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { State } from \"../../interface\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Header } from \"../../components/header/header\";\r\nimport { NavBar } from \"../../components/navBar/navBar\";\r\nimport { TechModal } from \"../../components/techModal/techModal\";\r\nimport { Tech } from \"../../components/techs/techs\";\r\nimport { ModalHandlerProps } from \"../../interface\";\r\nimport { SnackBarAlert } from \"../../components/snackBarAlert/snackBarAlert\";\r\n\r\nexport const Home = () => {\r\n  const [isOpen, setIsOpen] = useState<boolean>(false);\r\n  const [formType, setFormType] = useState<string>(\"\");\r\n  const [techData, setTechData] = useState<any>();\r\n\r\n  const userRedux: any = useSelector((state) => state);\r\n  const navigate = useNavigate();\r\n\r\n  const [state, setState] = React.useState<State>({\r\n    isOpenAlert: false,\r\n    vertical: \"top\",\r\n    horizontal: \"right\",\r\n    ResponseType: \"error\",\r\n    error: {\r\n      status: 0,\r\n      message: \"error message\",\r\n    },\r\n  });\r\n\r\n  const { vertical, horizontal, isOpenAlert, ResponseType, error } = state;\r\n\r\n  const handleModal = ({ typeOfForm, techData }: ModalHandlerProps) => {\r\n    if (typeOfForm) {\r\n      setFormType(typeOfForm);\r\n    }\r\n    setIsOpen(!isOpen);\r\n    setTechData(techData);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setState({ ...state, isOpenAlert: false });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userRedux.user.userName === \"\") {\r\n      navigate(\"/login\");\r\n    }\r\n  });\r\n\r\n  console.log(userRedux);\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <SnackBarAlert\r\n        ResponseType={ResponseType}\r\n        isOpenAlert={isOpenAlert}\r\n        vertical={vertical}\r\n        horizontal={horizontal}\r\n        handleClose={handleClose}\r\n        error={error}\r\n      />\r\n      <TechModal\r\n        setState={setState}\r\n        open={isOpen}\r\n        handleModal={handleModal}\r\n        type={formType}\r\n        techData={techData}\r\n      />\r\n      <Header />\r\n      <Tech handleModal={handleModal} />\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,QAAQ,gCAAgC;AACvD,SAASC,MAAM,QAAQ,gCAAgC;AACvD,SAASC,SAAS,QAAQ,sCAAsC;AAChE,SAASC,IAAI,QAAQ,8BAA8B;AAEnD,SAASC,aAAa,QAAQ,8CAA8C;AAAC;AAAA;AAE7E,OAAO,MAAMC,IAAI,GAAG,MAAM;EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAU,KAAK,CAAC;EACpD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,EAAO;EAE/C,MAAMe,SAAc,GAAGd,WAAW,CAAEe,KAAK,IAAKA,KAAK,CAAC;EACpD,MAAMC,QAAQ,GAAGf,WAAW,EAAE;EAE9B,MAAM,CAACc,KAAK,EAAEE,QAAQ,CAAC,GAAGpB,KAAK,CAACE,QAAQ,CAAQ;IAC9CmB,WAAW,EAAE,KAAK;IAClBC,QAAQ,EAAE,KAAK;IACfC,UAAU,EAAE,OAAO;IACnBC,YAAY,EAAE,OAAO;IACrBC,KAAK,EAAE;MACLC,MAAM,EAAE,CAAC;MACTC,OAAO,EAAE;IACX;EACF,CAAC,CAAC;EAEF,MAAM;IAAEL,QAAQ;IAAEC,UAAU;IAAEF,WAAW;IAAEG,YAAY;IAAEC;EAAM,CAAC,GAAGP,KAAK;EAExE,MAAMU,WAAW,GAAG,QAAiD;IAAA,IAAhD;MAAEC,UAAU;MAAEd;IAA4B,CAAC;IAC9D,IAAIc,UAAU,EAAE;MACdf,WAAW,CAACe,UAAU,CAAC;IACzB;IACAjB,SAAS,CAAC,CAACD,MAAM,CAAC;IAClBK,WAAW,CAACD,QAAQ,CAAC;EACvB,CAAC;EAED,MAAMe,WAAW,GAAG,MAAM;IACxBV,QAAQ,CAAC;MAAE,GAAGF,KAAK;MAAEG,WAAW,EAAE;IAAM,CAAC,CAAC;EAC5C,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACd,IAAIgB,SAAS,CAACc,IAAI,CAACC,QAAQ,KAAK,EAAE,EAAE;MAClCb,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,CAAC;EAEFc,OAAO,CAACC,GAAG,CAACjB,SAAS,CAAC;EACtB,oBACE;IAAA,wBACE,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV,QAAC,aAAa;MACZ,YAAY,EAAEO,YAAa;MAC3B,WAAW,EAAEH,WAAY;MACzB,QAAQ,EAAEC,QAAS;MACnB,UAAU,EAAEC,UAAW;MACvB,WAAW,EAAEO,WAAY;MACzB,KAAK,EAAEL;IAAM;MAAA;MAAA;MAAA;IAAA,QACb,eACF,QAAC,SAAS;MACR,QAAQ,EAAEL,QAAS;MACnB,IAAI,EAAET,MAAO;MACb,WAAW,EAAEiB,WAAY;MACzB,IAAI,EAAEf,QAAS;MACf,QAAQ,EAAEE;IAAS;MAAA;MAAA;MAAA;IAAA,QACnB,eACF,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV,QAAC,IAAI;MAAC,WAAW,EAAEa;IAAY;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACjC;AAEP,CAAC;AAAC,GA9DWlB,IAAI;EAAA,QAKQP,WAAW,EACjBC,WAAW;AAAA;AAAA,KANjBM,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}